[[plugins]]
repo='Shougo/vimfiler.vim'
on_cmd = ['VimFilerExplorer']
hook_add = '''
  nnoremap [filer] <Nop>
  nmap <Space>f [filer]

  " セーフモードを無効にした状態で起動する
  let g:vimfiler_safe_mode_by_default = 0 

  " vimデフォルトのエクスプローラをvimfilerで置き換える
  let g:vimfiler_as_default_explorer = 1 

  let g:vimfiler_tree_opened_icon = "▼"
  let g:vimfiler_tree_closed_icon = "▷"
  let g:vimfiler_readonly_file_icon = "⭤"
  let g:vimfiler_ignore_pattern = '^\%(.git\|.idea|.DS_Store\)$'

  " 現在開いているバッファのディレクトリをNERDTree風に開く
  nnoremap <silent> [filer]e :<C-u>VimFilerExplorer<CR>

  "現在開いているバッファのディレクトリを開く
  nnoremap <silent> [filer]q :<C-u>VimFilerBufferDir<CR>

  " vimfilerを開いている時のキーマッピング
  augroup vimfiler
    autocmd!
    autocmd FileType vimfiler call s:vimfiler_my_settings()
  augroup END

  function! s:vimfiler_my_settings()
    " qで終了（バッファに残らない）
    nmap <buffer> q <Plug>(vimfiler_exit)
    " Qで隠す（バッファに残る）
    nmap <buffer> Q <Plug>(vimfiler_hide)
  endfunction
'''


[[plugins]]
repo = 'prettier/vim-prettier'
on_ft = ['javascript', 'typescript', 'css', 'less', 'scss', 'json', 'graphql', 'markdown', 'vue']
hook_add = '''
  let g:prettier#autoformat = 0
  let g:prettier#quickfix_enabled = 0
  let g:prettier#exec_cmd_async = 1

  autocmd BufWritePre *.js,*.jsx,*.mjs,*.ts,*.tsx,*.css,*.less,*.scss,*.json,*.graphql,*.md,*.vue PrettierAsync
'''


[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
  let g:deoplete#enable_at_startup = 1
'''
on_i = 1


[[plugins]]
repo = 'Yggdroot/indentLine'
if = '''has('conceal')'''
on_cmd = ['IndentLinesReset', 'IndentLinesToggle']
hook_add = '''
  nnoremap [indentline] <Nop>
  nmap <Space>t [indentline]
  nnoremap <silent> [indentline] :<C-u>IndentLinesToggle<CR>
'''


[[plugins]]
repo = 'tomtom/tcomment_vim'
on_map = ['<C-_><C-_>']


[[plugins]]
repo = 'Lokaltog/vim-easymotion'
on_map = ['<Plug>(easymotion-']
hook_add = '''
  " 最初にマッチした箇所へスペースかエンターで飛ぶ
  let g:EasyMotion_enter_jump_first = 1
  let g:EasyMotion_space_jump_first = 1

  " s{char} で画面内検索
  " nmap s <Plug>(easymotion-s2)

  " f, t, F, TをEasyMotionにマッピング
  map f <Plug>(easymotion-fl)
  map t <Plug>(easymotion-tl)
  map F <Plug>(easymotion-Fl)
  map T <Plug>(easymotion-Tl)

  " <Tab>で次の候補、<S-Tab>で前の候補へジャンプ
  nmap g/ <Plug>(easymotion-sn)
  xmap g/ <Plug>(easymotion-sn)
  omap g/ <Plug>(easymotion-tn)
'''


[[plugins]]
repo = 'junegunn/vim-easy-align'
on_map = ['<Plug>(EasyAlign)']
hook_add = '''
  " Start interactive EasyAlign in visual mode (e.g. vip<Enter>)
  vmap <Enter> <Plug>(EasyAlign)

  " Start interactive EasyAlign for a motion/text object (e.g. gaip)
  nmap ga <Plug>(EasyAlign)
'''


[[plugins]]
repo = 'terryma/vim-multiple-cursors'
on_map = ['<C-n>']


[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']


[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'slim', 'eruby', 'css', 'scss', 'sass', 'php', 'styl', 'jade']
hook_add = '''
  let g:user_emmet_expandabbr_key = '<C-e>'
'''


on_ft = ['css', 'scss', 'sass']


[[plugins]]
repo = 'cakebaker/scss-syntax.vim'
on_ft = ['scss', 'sass']


[[plugins]]
repo = 'othree/html5.vim'
on_ft = ['html', 'php', 'eruby']


[[plugins]]
repo = 'vim-ruby/vim-ruby'
on_ft = ['ruby']


[[plugins]]
repo = 'slim-template/vim-slim'
on_ft = ['slim']


[[plugins]]
repo = 'digitaltoad/vim-jade'
on_ft = ['jade', 'pug']


[[plugins]]
repo = 'othree/yajs.vim'
on_ft = ['javascript']


[[plugins]]
repo = 'alexlafroscia/postcss-syntax.vim'
on_ft = ['css']
